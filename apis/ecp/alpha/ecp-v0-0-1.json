{
    "openapi": "3.0.0",
    "info": {
        "title": "Enterprise Cloud API specification",
        "version": "2020-01-13",
        "contact": {
            "name": "Al Sheehan"
        },
        "description": "This is the API specification for the Enterprise Cloud that has been designed with the primary goal of being 'A Universal Control Plane, Decoupled From Running Any Cloud'"
    },
    "servers": [
        {
            "url": "https://api.server.test/apis/v1/platform/{platformName}/providers/{providerName}",
            "variables": {
                "platformName": {
                    "default": "enterprise-Cloud-Demo",
                    "description": "The name given to the Enterprise Cloud Platform within the organisation - this variable allows for the Enterprise Cloud service offering to evolve over time as new implementations benefit from greater learning and more powerful cloud innovation"
                },
                "providerName": {
                    "description": "The type of Cloud Provider API that this API Server provides Control plane services for",
                    "default": "azr",
                    "enum": [
                        "azr",
                        "aws",
                        "gcp",
                        "kube",
                        "vmware"
                    ]
                }
            }
        }
    ],
    "paths": {
        "/enterpriseGraph": {
            "get": {
                "summary": "GET the Enterprise Graph of Dependencies",
                "description": "TODO: Create Examples that convey dependency - the change sequence must also be informational. The Enterprise Graph represents the global view of all governed spaces within a specific: <br> <div> <li> <b> Enterprise Cloud platformName </b> (representing the enterprise's platform name for the version or generation of service offering) & <div/> <div> <li> <b>Public/Private Cloud providerName </b> (azr, aws, gcp etc). <div/> <br/> <br> A Space is a multy cloud abstraction that is a unit of Governance and Accountability. <br/> <br> Each Space is of a specific kind and consists of a sequence of stages - the purpose of which is to manage for the controlled, deterministic and reversible application of change. <br/> <br> The objective of the graph is to establish a mechanism for intentionally placing and remembering/visualising every <br> <li>Boundary of accountability, <br> <li>Stages of change within this boundary and <br> <li>The dependency graph for each stage of change<br/> so that all Enterprise consumption of   Any Cloud API's can be holistically managed and governed. <br/> <br> By definition, any usage of any Cloud API's outside of the Graph is considered unmanaged. <br/> <br>By managing the spaces and intentionally placing Stages into a Dependency Graph, the Enterprise can know and manage its risk of 'Cloud API usage' & 'Continuous Change' across any cloud",
                "operationId": "get-GraphForEnterprise",
                "tags": [
                    "EnterpriseGraph"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/spaceObjectList"
                                },
                                "examples": {}
                            }
                        }
                    }
                }
            }
        },
        "/enterpriseGraph/spaces/{UniqueSpaceName}": {
            "get": {
                "summary": "Returns the dependency graph for all stages within a specific space",
                "description": "Each Stage within a Space has a list of 'impact stages' and 'dependency stages'. Any change that is applied to this stage has the impact radius defined. This endpoint also knows the list of stages where changes could impact this stage",
                "operationId": "get-GraphForSpace",
                "tags": [
                    "EnterpriseGraph"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/UniqueSpaceName"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok"
                    }
                }
            }
        },
        "/enterpriseGraph/spaces/{UniqueSpaceName}/stages/{UniqueStageName}": {
            "get": {
                "summary": "Returns the dependency graph for a specific stage within a space",
                "description": "Each Stage within a Space has a list of 'impact stages' and 'dependency stages'. Any change that is applied to this stage has the impact radius defined. This endpoint also knows the list of stages where changes could impact this stage",
                "operationId": "get-GraphForStage",
                "tags": [
                    "EnterpriseGraph"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/UniqueSpaceName"
                    },
                    {
                        "$ref": "#/components/parameters/UniqueStageName"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok"
                    }
                }
            }
        },
        "/spaces": {
            "get": {
                "summary": "GET Spaces endpoint",
                "description": "Returns a list of Space Names",
                "operationId": "get-Spaces",
                "tags": [
                    "Spaces"
                ],
                "parameters": [
                    {
                        "name": "kind",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "$ref": "#/components/schemas/spaceKind"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/spaceObjectList"
                                },
                                "examples": {
                                    "coreSpaces": {
                                        "value": {
                                            "spaceObjectList": [
                                                {
                                                    "spaceObjectkind": {
                                                        "kind": "core",
                                                        "layer": "0"
                                                    },
                                                    "spaceObjectList": [
                                                        {
                                                            "spaceName": "ga-nonp",
                                                            "operatorUri": "../../../src/modules/scaffolding/t0_kore_operators/single_sub_kore_v0_1"
                                                        },
                                                        {
                                                            "spaceName": "ga-prod",
                                                            "operatorUri": "../../../src/modules/scaffolding/t0_kore_operators/single_sub_kore_v0_1"
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    },
                                    "kernelSpaces": {
                                        "value": {
                                            "spaceObjectList": [
                                                {
                                                    "spaceObjectkind": {
                                                        "kind": "kernel",
                                                        "layer": "1"
                                                    },
                                                    "spaceObjectList": [
                                                        {
                                                            "spaceName": "ks01",
                                                            "operatorUri": "../../../../src/modules/scaffolding/t1_kernel_operators/single_sub_kernel_v0_1"
                                                        },
                                                        {
                                                            "spaceName": "ks02",
                                                            "operatorUri": "../../../../src/modules/scaffolding/t1_kernel_operators/single_sub_kernel_v0_1"
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    },
                                    "tenantSpaces": {
                                        "value": {
                                            "spaceObjectList": [
                                                {
                                                    "spaceObjectkind": {
                                                        "kind": "tenant",
                                                        "layer": "2"
                                                    },
                                                    "spaceObjectList": [
                                                        {
                                                            "spaceName": "retail-bank",
                                                            "operatorUri": "../../../../src/modules/scaffolding/t2_tenant_operators/single_sub_tenant_v0_1"
                                                        },
                                                        {
                                                            "spaceName": "invest-bank",
                                                            "operatorUri": "../../../../src/modules/scaffolding/t2_tenant_operators/single_sub_tenant_v0_1"
                                                        },
                                                        {
                                                            "spaceName": "business-bank",
                                                            "operatorUri": "../../../../src/modules/scaffolding/t2_tenant_operators/single_sub_tenant_v0_1"
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    },
                                    "graphOfSpaces": {
                                        "value": {
                                            "spaceObjectList": [
                                                {
                                                    "spaceObjectkind": {
                                                        "kind": "core",
                                                        "layer": "0"
                                                    },
                                                    "spaceObjectList": [
                                                        {
                                                            "spaceName": "ga-nonp",
                                                            "operatorUri": "../../../src/modules/scaffolding/t0_kore_operators/single_sub_kore_v0_1"
                                                        },
                                                        {
                                                            "spaceName": "ga-prod",
                                                            "operatorUri": "../../../src/modules/scaffolding/t0_kore_operators/single_sub_kore_v0_1"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "spaceObjectkind": {
                                                        "kind": "kernel",
                                                        "layer": "1"
                                                    },
                                                    "spaceObjectList": [
                                                        {
                                                            "spaceName": "ks01",
                                                            "operatorUri": "../../../../src/modules/scaffolding/t1_kernel_operators/single_sub_kernel_v0_1"
                                                        },
                                                        {
                                                            "spaceName": "ks02",
                                                            "operatorUri": "../../../../src/modules/scaffolding/t1_kernel_operators/single_sub_kernel_v0_1"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "spaceObjectkind": {
                                                        "kind": "tenant",
                                                        "layer": "2"
                                                    },
                                                    "spaceObjectList": [
                                                        {
                                                            "spaceName": "retail-bank",
                                                            "operatorUri": "../../../../src/modules/scaffolding/t2_tenant_operators/single_sub_tenant_v0_1"
                                                        },
                                                        {
                                                            "spaceName": "invest-bank",
                                                            "operatorUri": "../../../../src/modules/scaffolding/t2_tenant_operators/single_sub_tenant_v0_1"
                                                        },
                                                        {
                                                            "spaceName": "business-bank",
                                                            "operatorUri": "../../../../src/modules/scaffolding/t2_tenant_operators/single_sub_tenant_v0_1"
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "CREATE a new Space",
                "description": "This operation creates a new - and Unique - Space",
                "operationId": "delete-NewSpace",
                "tags": [
                    "Spaces"
                ],
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/spaceCreationObject"
                            },
                            "examples": {
                                "createCore": {
                                    "value": {
                                        "spaceKindObject": {
                                            "spaceKind": "core",
                                            "spaceLayer": "0"
                                        },
                                        "spaceObject": {
                                            "spaceName": "preview",
                                            "operatorUri": "../../../src/modules/scaffolding/t0_kore_operators/single_sub_kore_v0_1"
                                        }
                                    }
                                },
                                "createTenant": {
                                    "value": {
                                        "spaceKindObject": {
                                            "spaceKind": "tenant",
                                            "spaceLayer": "2"
                                        },
                                        "spaceObject": {
                                            "spaceName": "business-bank",
                                            "operatorUri": "../../../../src/modules/scaffolding/t2_tenant_operators/single_sub_tenant_v0_1"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok"
                    }
                }
            }
        },
        "/spaces/{UniqueSpaceName}/stages": {
            "get": {
                "summary": "GET Space Stages",
                "description": "Returns a list of Stages within the specified Space",
                "operationId": "get-StagesForSpace",
                "tags": [
                    "Stages"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/UniqueSpaceName"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/stageObjectList"
                                },
                                "examples": {
                                    "KernelSpaceStages": {
                                        "value": {
                                            "stageObjectList": [
                                                {
                                                    "dependency": "ga-nonp.ks01.australiaeast",
                                                    "stageName": "dev",
                                                    "changeSequence": "0"
                                                },
                                                {
                                                    "dependency": "ga-nonp.ks01.australiasoutheast",
                                                    "stageName": "test",
                                                    "changeSequence": "1"
                                                },
                                                {
                                                    "dependency": "ga-nonp.ks01.australiaeast",
                                                    "stageName": "stg",
                                                    "changeSequence": "2"
                                                },
                                                {
                                                    "dependency": "ga-prod.ks01.australiaeast",
                                                    "stageName": "prod",
                                                    "changeSequence": "3"
                                                },
                                                {
                                                    "dependency": "ga-prod.ks01.australiasoutheast",
                                                    "stageName": "prod2",
                                                    "changeSequence": "4"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Create a new Stage within a Space",
                "description": "Creates a new Stage Object",
                "operationId": "create-NewStageForSpace",
                "tags": [
                    "Stages"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/UniqueSpaceName"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/stageObject"
                            },
                            "examples": {
                                "tenantStage": {
                                    "value": {
                                        "stageName": "dev",
                                        "stageDependency": "ga-nonp.ks01.australiaeast",
                                        "stageChangeSequence": "1",
                                        "currentStageOperator": "../../../src/modules/scaffolding/t0_kore_operators/single_sub_kore_v0_1"
                                    }
                                },
                                "kernelStage": {
                                    "value": {
                                        "stageName": "ks01.australiaeast",
                                        "stageDependency": "ga-nonp",
                                        "stageChangeSequence": "1",
                                        "currentStageOperator": "../../../src/modules/scaffolding/t0_kore_operators/single_sub_kore_v0_1"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok"
                    }
                }
            }
        },
        "/spaces/{UniqueSpaceName}/stages/{UniqueStageName}/change/delete": {
            "delete": {
                "summary": "FAIL SAFE: DELETE a Stage within a Space",
                "description": "Delete a specific Stage Object within the Space. This is a very distructive operation and recovery is difficult to achieve and will be dependent on the sophistication of the operator. By default this endpoint is rendered safe - by defaulting the change mode to - plan. The default execution of this endpoint SHOULD ONLY calculate the destroy plan",
                "operationId": "delete-StageFromSpace",
                "tags": [
                    "Stages"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/UniqueSpaceName"
                    },
                    {
                        "$ref": "#/components/parameters/UniqueStageName"
                    },
                    {
                        "$ref": "#/components/parameters/StageChangeMode"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/spaces/{UniqueSpaceName}/stages/{UniqueStageName}/change/plan": {
            "get": {
                "summary": "Calculate the Change Plan for the change boundary (Stage)",
                "description": "This endpoint will calculate the change plan for the change boundary being addressed via the path parameters",
                "operationId": "calculate-ChangePlanForStage",
                "tags": [
                    "Stages"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/UniqueSpaceName"
                    },
                    {
                        "$ref": "#/components/parameters/UniqueStageName"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/spaces/{UniqueSpaceName}/stages/{UniqueStageName}/change/apply": {
            "put": {
                "summary": "FAIL SAFE: Calculate and Apply the Change Plan for the change boundary (Stage)",
                "description": "This endpoint will calculate and Apply the change plan for the change boundary being addressed via the path parameters. This endpoint is designed to fail safe and as such - the change mode parameter MUST be set to 'apply' in order for changes to actually be applied",
                "operationId": "calculateAndApply-ChangePlanForStage",
                "tags": [
                    "Stages"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/UniqueSpaceName"
                    },
                    {
                        "$ref": "#/components/parameters/UniqueStageName"
                    },
                    {
                        "$ref": "#/components/parameters/StageChangeMode"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/spaces/{UniqueSpaceName}/deploymentSpaces": {
            "get": {
                "summary": "Returns the list of Deployment Spaces configured for the space",
                "description": "Each Space consists of a set of deployment spaces. Each deployment space is where Cloud Resources are actually deployed and forms the change control boundary. The Deployment Spaces representes the full addressable scope within the space. This set of deployment spaces is delegated to either a single team, or it can be segmented across multiple teams.",
                "operationId": "get-DeploymentSpaces",
                "tags": [
                    "Spaces"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/UniqueSpaceName"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/deploymentSpaceList"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "summary": "Set the list of deployment spaces for the space",
                "description": "This endpoint manages the configuration for the deployment spaces that will be Idempotently managed and applied across all stages within this Space",
                "operationId": "set-DeploymentSpaces",
                "tags": [
                    "Spaces"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/UniqueSpaceName"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/deploymentSpaceList"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok"
                    }
                }
            }
        },
        "/spaces/{UniqueSpaceName}/teams": {
            "get": {
                "summary": "Returns a list of teams for the Space",
                "description": "This endpoint is responsible for replying with the list of teams that have been granted specific ownership/privileges over a specific scope within the space. This scope must be ",
                "operationId": "get-TeamsForSpace",
                "tags": [
                    "Teams"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/UniqueSpaceName"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/teamObjectList"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "CREATE New Team for Space",
                "description": "This endpoint is responsible for replying with the list of teams that have been granted specific ownership/privileges over a specific scope within the space. This scope must be ",
                "operationId": "set-TeamsForSpace",
                "tags": [
                    "Teams"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/UniqueSpaceName"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/spaceCreationObject"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/spaces/{UniqueSpaceName}/teams/{TeamName}/delete": {
            "delete": {
                "summary": "Delete a Team from the Space",
                "description": "This endpoint is responsible for recording the desire for a Team to be removed from a Space. In order to fulfill on this intent, the PUT ../{TeamName}/change/apply endpoint needs to be called",
                "operationId": "delete-TeamsForSpace",
                "tags": [
                    "Teams"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/UniqueSpaceName"
                    },
                    {
                        "$ref": "#/components/parameters/TeamName"
                    },
                    {
                        "$ref": "#/components/parameters/StageChangeMode"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/teamObjectList"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/spaces/{UniqueSpaceName}/stages/{UniqueStageName}/teams/{TeamName}/groups": {
            "get": {
                "summary": "Returns a list of the Group Objects within the Team that are specific to the Stage",
                "description": "This endpoint will reply with the list of Groups as defined in the Entitlement Operator that has been assigned to the Stage within this Space",
                "operationId": "get-TeamGroups",
                "tags": [
                    "Teams"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/UniqueSpaceName"
                    },
                    {
                        "$ref": "#/components/parameters/UniqueStageName"
                    },
                    {
                        "$ref": "#/components/parameters/TeamName"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/groupEntitlementList"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/spaces/{UniqueSpaceName}/stages/{UniqueStageName}/teams/{TeamName}/change/plan": {
            "get": {
                "summary": "Calculate the Change Plan for the Entitlelement Bindings that will be applied to the change boundary (Stage)",
                "description": "This Endpoint will calculate the entitlement change plan that will be applied to the change boundary defined at this stage and for the deployment spaces within the Teams ownership",
                "operationId": "calculate-ChangePlanForTeamAtStage",
                "tags": [
                    "Teams"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/UniqueSpaceName"
                    },
                    {
                        "$ref": "#/components/parameters/UniqueStageName"
                    },
                    {
                        "$ref": "#/components/parameters/TeamName"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/spaces/{UniqueSpaceName}/stages/{UniqueStageName}/teams/{TeamName}/change/apply": {
            "put": {
                "summary": "FAIL SAFE: Calculate and Apply the Change Plan for the Entitlelement Bindings that will be applied to the change boundary (Stage)",
                "description": "This Endpoint will calculate & apply the entitlement change plan that will be applied to the change boundary defined at this stage and for the deployment spaces within the Teams ownership.",
                "operationId": "calculateAndApply-ChangePlanForTeamAtStage",
                "tags": [
                    "Teams"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/UniqueSpaceName"
                    },
                    {
                        "$ref": "#/components/parameters/UniqueStageName"
                    },
                    {
                        "$ref": "#/components/parameters/TeamName"
                    },
                    {
                        "$ref": "#/components/parameters/StageChangeMode"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/spaces/{UniqueSpaceName}/stages/{UniqueStageName}/teams/{TeamName}/members/{GroupName}": {
            "get": {
                "summary": "Get the team members for the group for a specific stage",
                "description": "",
                "operationId": "get-TeamMembers",
                "tags": [
                    "Teams"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/UniqueSpaceName"
                    },
                    {
                        "$ref": "#/components/parameters/UniqueStageName"
                    },
                    {
                        "$ref": "#/components/parameters/TeamName"
                    },
                    {
                        "$ref": "#/components/parameters/GroupName"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/spaces/{UniqueSpaceName}/operators": {
            "patch": {
                "summary": "MODIFY the VERSION of an Operator of a specific Kind for a specific Space",
                "description": "The Operator performs the inversion of dependency on the cloud provider. When a Space is being changed - the Operator contains this logic/knowledge - and must be set at the space level before it can then be applied gradually across the stages. This operation will send a space object that contains the unique name of the space and the operator uri - the operator uri is a fully qualified resource",
                "operationId": "update-OperatorVersionForSpace",
                "tags": [
                    "Operators"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/UniqueSpaceName"
                    },
                    {
                        "$ref": "#/components/parameters/OperatorKind"
                    },
                    {
                        "$ref": "#/components/parameters/OperatorVersion"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/operatorVersion"
                            },
                            "examples": {
                                "minorVersionUpgrade": {
                                    "value": {
                                        "operatorVersion": "../../../src/modules/scaffolding/t0_kore_operators/single_sub_kore_v0_2"
                                    }
                                },
                                "majorVersionUpgrade": {
                                    "value": {
                                        "operatorVersion": "../../../src/modules/scaffolding/t0_kore_operators/single_sub_kore_v1_0"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok"
                    }
                }
            }
        },
        "/operators": {
            "get": {
                "summary": "Returns a list of (un/registered) operators filtered by the query parameters provided",
                "description": "This endpoint returns all opertors that the API Server knows about. This is the full list of Operators and is intended to grow as the community adds/extends operators across clouds, tooling, kinds and versions ",
                "operationId": "get-KnownOperators",
                "tags": [
                    "Operators"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Tooling"
                    },
                    {
                        "$ref": "#/components/parameters/CloudProvider"
                    },
                    {
                        "$ref": "#/components/parameters/OperatorName"
                    },
                    {
                        "$ref": "#/components/parameters/OperatorRegistrationStatus"
                    },
                    {
                        "$ref": "#/components/parameters/OperatorKind"
                    },
                    {
                        "$ref": "#/components/parameters/OperatorVersion"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/operatorObjectList"
                                },
                                "examples": {
                                    "terraform-example": {
                                        "value": {
                                            "operatorObjectList": [
                                                {
                                                    "operatorName": "SingleAccountTenant",
                                                    "operatorVersion": "v1",
                                                    "operatorTooling": "terraform",
                                                    "operatorCloud": "azr",
                                                    "operatorUri": "../../../../src/modules/scaffolding/t2_tenant_operators/single_sub_tenant_v0_1"
                                                },
                                                {
                                                    "operatorName": "SingleAccountTenant",
                                                    "operatorVersion": "v1",
                                                    "operatorTooling": "terraform",
                                                    "operatorCloud": "aws",
                                                    "operatorUri": "../../../../src/modules/scaffolding/t2_tenant_operators/single_account_tenant_v0_1"
                                                }
                                            ]
                                        }
                                    },
                                    "multi-tool-example": {
                                        "value": {
                                            "operatorObjectList": [
                                                {
                                                    "operatorName": "SingleAccountTenant",
                                                    "operatorVersion": "v1",
                                                    "operatorTooling": "terraform",
                                                    "operatorCloud": "azr",
                                                    "operatorUri": "../../../../src/modules/scaffolding/t2_tenant_operators/single_sub_tenant_v0_1"
                                                },
                                                {
                                                    "operatorName": "SingleAccountTenant",
                                                    "operatorVersion": "v2",
                                                    "operatorTooling": "terraform",
                                                    "operatorCloud": "azr",
                                                    "operatorUri": "../../../../src/modules/scaffolding/t2_tenant_operators/single_sub_tenant_v0_2"
                                                },
                                                {
                                                    "operatorName": "SingleAccountTenant",
                                                    "operatorVersion": "v1",
                                                    "operatorTooling": "powershell",
                                                    "operatorCloud": "azr",
                                                    "operatorUri": "../../../../src/modules/posh/scaffolding/t2_tenant_operators/single_sub_tenant_v0_1"
                                                },
                                                {
                                                    "operatorName": "SingleAccountTenant",
                                                    "operatorVersion": "v1",
                                                    "operatorTooling": "terraform",
                                                    "operatorCloud": "aws",
                                                    "operatorUri": "../../../../src/modules/scaffolding/t2_tenant_operators/single_account_tenant_v0_1"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "summary": "Register a new Operator with the API Server",
                "description": "This endpoint will REGISTER new Operators with the API Server",
                "operationId": "register-OperatorInstance",
                "tags": [
                    "Operators"
                ],
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/operatorObject"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok"
                    }
                }
            }
        },
        "/operators/registered": {
            "get": {
                "summary": "Returns the list of API Server Registered Operators ",
                "description": "Returns the list of Operators that are Registered with this API Server Instance. These Operators are available for use within the Control Plane. ",
                "operationId": "get-RegisteredOperators",
                "tags": [
                    "Operators"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Tooling"
                    },
                    {
                        "$ref": "#/components/parameters/CloudProvider"
                    },
                    {
                        "$ref": "#/components/parameters/OperatorName"
                    },
                    {
                        "$ref": "#/components/parameters/OperatorKind"
                    },
                    {
                        "$ref": "#/components/parameters/OperatorVersion"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok"
                    }
                }
            },
            "put": {
                "summary": "UnRegister An Operator with the API Server",
                "description": "This endpoint will UNREGISTER new Operators with the API Server",
                "operationId": "unregister-OperatorInstance",
                "tags": [
                    "Operators"
                ],
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/operatorObject"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok"
                    }
                }
            }
        },
        "/operators/repository": {
            "get": {
                "summary": "Returns a list of operator repositories that are within scope of the API Server",
                "description": "The API Server has a dependecy inversion with respect to the management of any cloud. The Operator Resource is the method by which the continued evolution and expansion of Cloud Management can occur and the API Server can 'git-pull' into its operational scope.",
                "operationId": "get-OperatorRepos",
                "tags": [
                    "Operators"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/operatorRepoObjectList"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "summary": "Add a Repository to the API Server",
                "description": "The API Server has a dependecy inversion with respect to the management of any cloud. The Operator Resource is the method by which the continued evolution and expansion of Cloud Management can occur and the API Server can 'git-pull' into its operational scope.",
                "operationId": "set-OperatorRepo",
                "tags": [
                    "Operators"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/operatorRepoObjectList"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/operators/repository/{OperatorRepoName}/git-pull": {
            "put": {
                "summary": "Perform a Git-Pull on a speciific operator repository",
                "description": "The API Server has a dependecy inversion with respect to the management of any cloud. The Operator Resource is the method by which the continued evolution and expansion of Cloud Management can occur and the API Server can 'git-pull' into its operational scope.",
                "operationId": "gitpull-OperatorRepo",
                "tags": [
                    "Operators"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/OperatorRepoName"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok"
                    }
                }
            }
        },
        "/publicClouds": {
            "get": {
                "summary": "Returns a list of Public Clouds that this API Server can Continually Assure",
                "description": "A Public Cloud is an API surface that is constantly evolving (expanding, contracting and changing). In order to know an manage the risk of using a public cloud - the continuous assurance must be capable of identifying and reassessing its measure of safety against the dynamic state of this API Surface",
                "operationId": "get-PublicClouds",
                "tags": [
                    "PublicClouds"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/publicCloudAPISpecObject"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "summary": "Registers a Public Cloud that this API Server wishes to continually assure",
                "description": "The API Server has a dependecy inversion with respect to the management of any cloud. The Operator Resource is the method by which the continued evolution and expansion of Cloud Management can occur and the API Server can 'git-pull' into its operational scope.",
                "operationId": "set-OperatorRepo",
                "tags": [
                    "PublicClouds"
                ],
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/publicCloudAPISpecObject"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok"
                    }
                }
            }
        },
        "/publicClouds/{PublicCloudAPISpecName}/assurance": {
            "get": {
                "summary": "Returns a list of Public Clouds Continuous Assurance Objects that this API Server is Continually Assuring",
                "description": "A Public Cloud is an API surface that is constantly evolving (expanding, contracting and changing). In order to know an manage the risk of using a public cloud - the continuous assurance must be capable of identifying and reassessing its measure of safety against the dynamic state of this API Surface",
                "operationId": "get-ContinuousAssuranceObjects",
                "tags": [
                    "PublicClouds"
                ],
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/publicCloudAPISpecObject"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/continuousAssuranceObjectList"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "summary": "Registers an Assurance Object for a Public Cloud",
                "description": "The API Server has a dependecy inversion with respect to the management of any cloud. The Operator Resource is the method by which the continued evolution and expansion of Cloud Management can occur and the API Server can 'git-pull' into its operational scope.",
                "operationId": "set-ContinuousAssuranceObject",
                "tags": [
                    "PublicClouds"
                ],
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/continuousAssuranceObject"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "spaceName": {
                "title": "spaceName",
                "description": "The Space Name MUST BE a 'globally unique identifier' for a boundary of ownership and responsibility within the enterprise graph. It is the responsibility of the Enterprise Cloud API Server to maintain the name uniqueness across the graph.",
                "type": "string"
            },
            "spaceKind": {
                "title": "spaceKind",
                "description": "The Enterprise Graph consists of uniquely identifiable spaces within a cloud provider. Each space is of a specific kind, of which there are only a discrete number. The kinds reflect the layered architecture where by impact and probability (of failure/breach) can be explicitly managed. The Core has the maximum service impact and therefore should be reserved for inherently resilient/available Cloud services or non-runtime essential services such as an IPAM. The Kernel space is reserved for services that are shared across tenants an that require resilience/availability that is greater than any single cloud provider fault domain can provide. The tenant space establishes the boundary contract between the tenant and the enterprise cloud platform. It is within the tenant space that dedicated services are provisioned.",
                "type": "string",
                "enum": [
                    "core",
                    "kernel",
                    "tenant"
                ]
            },
            "spaceLayer": {
                "title": "spaceLayer",
                "description": "The primary objective for introducing a Layering constraint into the architecture is to induce a level of decoupling. The layers equate to the Space Kinds where 0 = core, 1 = kernel and 2 = tenant",
                "type": "string",
                "enum": [
                    "0",
                    "1",
                    "2"
                ]
            },
            "spaceKindObject": {
                "title": "spaceKindObject",
                "description": "The Enterprise Graph consists of uniquely identifiable spaces within a cloud provider. Each space is of a specific kind, of which there are only a discrete number.",
                "type": "object",
                "properties": {
                    "spaceKind": {
                        "$ref": "#/components/schemas/spaceKind"
                    },
                    "spaceLayer": {
                        "$ref": "#/components/schemas/spaceLayer"
                    }
                },
                "enum": [
                    {
                        "kind": "core",
                        "layer": "0"
                    },
                    {
                        "kind": "tenant",
                        "layer": "1"
                    },
                    {
                        "kind": "tenant",
                        "layer": "2"
                    }
                ]
            },
            "spaceObject": {
                "title": "spaceObject",
                "description": "A Space Object consists of its unique name and its immutable and versioned operator uri. The unique name provides the space's location within the Graph and the uri is the pointer to the instantiation of its 'SpaceKind' within the graph. This object is loosely typed so that all implementation details are inverted from the graph so that the interaction model can remain declarative",
                "type": "object",
                "properties": {
                    "spaceName": {
                        "$ref": "#/components/schemas/spaceName"
                    },
                    "operatorUri": {
                        "$ref": "#/components/schemas/operatorUri"
                    }
                }
            },
            "spaceCreationObject": {
                "title": "spaceCreationObject",
                "description": "When creating a new Space within the Enterprise Graph - a spaceCreationObject is used. This object consists of the uniquely identifiable name and the uri to the operator that will instantiate the config for this instance of the operator kind. The spaceKindObject tells the API server what type of space is being requested so that this can be appropriately 'placed'",
                "type": "object",
                "properties": {
                    "spaceKindObject": {
                        "$ref": "#/components/schemas/spaceKindObject"
                    },
                    "spaceObject": {
                        "$ref": "#/components/schemas/spaceObject"
                    }
                }
            },
            "spaceObjectList": {
                "title": "spaceObjectList",
                "description": "This represents a list of Space Objects",
                "type": "array",
                "items": {
                    "type": "object",
                    "properties": {
                        "spaceObject": {
                            "$ref": "#/components/schemas/spaceObject"
                        }
                    }
                }
            },
            "deploymentSpace": {
                "title": "deploymentSpace",
                "description": "A String representing the identifier for a single deployment space. This deployment space will be created in each Stage within this Space and will be identified by the 'stage-deploymentSpace' identifier",
                "type": "string"
            },
            "deploymentSpaceList": {
                "title": "deploymentSpaceList",
                "description": "This represents a list of Deployment Space Objects",
                "type": "array",
                "items": {
                    "type": "object",
                    "properties": {
                        "deploymentSpace": {
                            "$ref": "#/components/schemas/deploymentSpace"
                        }
                    }
                }
            },
            "stageName": {
                "title": "stageName",
                "description": "The Stage is an object that serves the purpose of limiting the change/blast radius within a specific spaceObject. Change is propagated through out the spaceObject by sequentially applying changes to each Stage. Spaces and Stages are the primary primitives that support fault tolerance by virture of partitions. Location is either explicit or inherited dependent on the SpaceKind",
                "type": "string"
            },
            "stageDependency": {
                "title": "stageDependency",
                "description": "When each Stage is created - It MUST specify its layer dependency. The layering exists to establish a dependency flow in the direction of stability - higher layers need to declare their dependency on the lower layers. The Enterprise Graph is the mechanism that represents the Dependency trees across the enterprise cloud.",
                "type": "string"
            },
            "stageChangeSequence": {
                "title": "stageChangeSequence",
                "description": "All change is confined to a stage within a space. Change propagates through out a space by sequentially being applied one stage at a time. The intent is to establish a level of Determinisim regarding change which is why there is a stageSequence value. The order of change plays a critical role in establishing repeatable changes and also for applying an upgrate strategy that manages the exposure of the system to teh effects of continual change",
                "type": "string"
            },
            "currentStageOperator": {
                "title": "currentStageOperator",
                "description": "When each Stage is created, the Operator that has been declared at the space object level - is applied. The Operator pattern is intended to be open for extension by virtue of immutable version management. Once a Space is created with a specific Operator Instance - the Tooling, Cloud, or Operator Type (Name) CANNOT CHANGE. The Version however, can change.",
                "type": "string"
            },
            "stageObject": {
                "title": "stageObject",
                "description": "Object containing the Stage properties",
                "type": "object",
                "properties": {
                    "stageName": {
                        "$ref": "#/components/schemas/stageName"
                    },
                    "stageDependency": {
                        "$ref": "#/components/schemas/stageDependency"
                    },
                    "stageChangeSequence": {
                        "$ref": "#/components/schemas/stageChangeSequence"
                    },
                    "currentStageOperator": {
                        "$ref": "#/components/schemas/currentStageOperator"
                    }
                }
            },
            "stageObjectList": {
                "title": "stageObjectList",
                "description": "This represents a list of Space Stage Objects",
                "type": "array",
                "items": {
                    "type": "object",
                    "properties": {
                        "spaceObject": {
                            "$ref": "#/components/schemas/stageObject"
                        }
                    }
                }
            },
            "operatorObject": {
                "title": "operatorObject",
                "description": "The operatorObject is the representation of an Operator Instance. It is a multi-Cloud, multi-Tooling & multi-Version construct that services a single purpose - the operator Name is a distinct representation of the purpose that is being served. The operator exists to serve this purpose whilst being OPEN FOR EXTENSION via many tools and across clouds whilst at the same time being CLOSED FOR MODIFICATION by virtue of the vesrioning construct",
                "type": "object",
                "properties": {
                    "operatorName": {
                        "$ref": "#/components/schemas/operatorName"
                    },
                    "operatorRegistrationStatus": {
                        "$ref": "#/components/schemas/operatorRegistrationStatus"
                    },
                    "operatorKind": {
                        "$ref": "#/components/schemas/operatorKind"
                    },
                    "operatorVersion": {
                        "$ref": "#/components/schemas/operatorVersion"
                    },
                    "operatorTooling": {
                        "$ref": "#/components/schemas/operatorTooling"
                    },
                    "operatorCloud": {
                        "$ref": "#/components/schemas/operatorCloud"
                    },
                    "operatorUri": {
                        "$ref": "#/components/schemas/operatorUri"
                    }
                }
            },
            "operatorName": {
                "title": "operatorName",
                "description": "The operator Name is the unique identifier for the 'codified single responsibility' that is the reason that this operator exists. The operator is intended to be open to extension but closed for modification",
                "type": "string"
            },
            "operatorKind": {
                "title": "operatorKind",
                "description": "An Operator can be one of a distinct list of kinds. These kinds categorise the Responsibility Area for the Operators",
                "type": "string",
                "enum": [
                    "architecture",
                    "control",
                    "entitlement"
                ]
            },
            "operatorVersion": {
                "title": "operatorVersion",
                "description": "The specific cloud that the operator has been codified to work within",
                "type": "string"
            },
            "operatorTooling": {
                "title": "operatorTooling",
                "description": "The tooling that has been used to codify the Operators Single Responsibility",
                "type": "string"
            },
            "operatorCloud": {
                "title": "operatorCloud",
                "description": "The specific cloud that the operator has been codified to work within",
                "type": "string"
            },
            "operatorRegistrationStatus": {
                "title": "operatorRegistrationStatus",
                "description": "This indicates whether the operator has been registered for use by the API Server",
                "type": "string",
                "enum": [
                    "yes",
                    "no"
                ],
                "default": "no"
            },
            "operatorUri": {
                "title": "operatorUri",
                "description": "This is the fully qualified uri to the Operator Endpoint - all details are inverted away from the API server and the lifecycle of the Operators within the context of the API server is managed via the /operator endpoint",
                "type": "string"
            },
            "operatorRepoUri": {
                "title": "operatorRepoUri",
                "description": "This is the fully qualified uri to Git Repository that is responsible for the management of Operators",
                "type": "string"
            },
            "operatorRepoName": {
                "title": "operatorRepoName",
                "description": "The Unique short name reference for a distinct Operator Code Repository that is accessible via a URI - operatorURI",
                "type": "string"
            },
            "operatorRepoObject": {
                "title": "operatorRepoObject",
                "description": "The operatorRepoObject has two properties that uniquely identifies and locates the repository that manages the lifecycle of Operators",
                "type": "object",
                "properties": {
                    "operatorRepoName": {
                        "$ref": "#/components/schemas/operatorRepoName"
                    },
                    "operatorRepoUri": {
                        "$ref": "#/components/schemas/operatorRepoUri"
                    }
                }
            },
            "operatorObjectList": {
                "title": "operatorObjectList",
                "description": "This represents a list of Operator Objects",
                "type": "array",
                "items": {
                    "type": "object",
                    "properties": {
                        "operatorObject": {
                            "$ref": "#/components/schemas/operatorObject"
                        }
                    }
                }
            },
            "operatorRepoObjectList": {
                "title": "operatorRepoObjectList",
                "description": "This represents a list of Operator Repository Objects",
                "type": "array",
                "items": {
                    "type": "object",
                    "properties": {
                        "operatorRepoObject": {
                            "$ref": "#/components/schemas/operatorRepoObject"
                        }
                    }
                }
            },
            "teamName": {
                "title": "teamName",
                "description": "A Space can be sub-delegated to one or many teams. The Team Name is the prefix that will be used to identify all 'privilege groupings' that correspond with the specific Team Type",
                "type": "string"
            },
            "teamScope": {
                "title": "teamScope",
                "description": "The team is a delegation construct that exists for the purpose of managing a specific scope of deployment spaces within a cloud space. This scope can either be the full set of deployment spaces or a subset",
                "type": "array",
                "items": {
                    "type": "object",
                    "properties": {
                        "deploymentSpaceList": {
                            "$ref": "#/components/schemas/deploymentSpaceList"
                        }
                    }
                }
            },
            "teamObject": {
                "title": "teamObject",
                "description": "Object containing the properties relating to a Team",
                "type": "object",
                "properties": {
                    "teamName": {
                        "$ref": "#/components/schemas/teamName"
                    },
                    "teamScope": {
                        "$ref": "#/components/schemas/teamScope"
                    }
                }
            },
            "teamObjectList": {
                "title": "teamObjectList",
                "description": "This represents a list of Team Objects",
                "type": "array",
                "items": {
                    "type": "object",
                    "properties": {
                        "teamObject": {
                            "$ref": "#/components/schemas/teamObject"
                        }
                    }
                }
            },
            "groupName": {
                "title": "groupName",
                "description": "This is the unique identifier for the group object that exists as the control point for entitlement management - the group is the only security principle that can have privileges assigned. Any user or automation principle SHOULD not have any entitlements assigned directly. This creates an additional control point for RBAC.",
                "type": "string"
            },
            "entitlement": {
                "title": "entitlement",
                "description": "The entitlement represents the privilege ('built-in' or 'custom') that can be assigned to a specific Security Principle at a specific scope",
                "type": "string"
            },
            "entitlementList": {
                "title": "entitlementList",
                "description": "This represents a list of entitlements",
                "type": "array",
                "items": {
                    "type": "object",
                    "properties": {
                        "entitlement": {
                            "$ref": "#/components/schemas/entitlement"
                        }
                    }
                }
            },
            "groupEntitlementsObject": {
                "title": "groupEntitlementsObject",
                "description": "For a specific Group, there are a list of 1 to many discrete entitlements. This object is used to representat the state of entitlements for a specific group",
                "type": "object",
                "properties": {
                    "groupName": {
                        "$ref": "#/components/schemas/groupName"
                    },
                    "entitlementList": {
                        "$ref": "#/components/schemas/entitlementList"
                    }
                }
            },
            "groupEntitlementList": {
                "title": "groupEntitlementList",
                "description": "This represents a list of Group Entitlement Objects that apply to a Team",
                "type": "array",
                "items": {
                    "type": "object",
                    "properties": {
                        "groupEntitlementsObject": {
                            "$ref": "#/components/schemas/groupEntitlementsObject"
                        }
                    }
                }
            },
            "entitlementGroupMember": {
                "title": "entitlementGroupMember",
                "description": "This is the unique identifier for the team member - depending on the implemention - this is a loosely typed value that allows for anything from a GUID to an email address",
                "type": "string"
            },
            "publicCloudAPISpecUri": {
                "title": "publicCloudAPISpecUri",
                "description": "This is the fully qualified uri to Git Repository that publishes the Public Cloud API Specs",
                "type": "string"
            },
            "publicCloudAPISpecName": {
                "title": "publicCloudAPISpecName",
                "description": "The Unique short name reference for a distinct Public Cloud Provider e.g. aws, azr, gcp, O365, dropbox,salesforce ",
                "type": "string"
            },
            "publicCloudAPISpecObject": {
                "title": "publicCloudAPISpecObject",
                "description": "The operatorRepoObject has two properties that uniquely identifies and locates the repository that manages the lifecycle of Operators",
                "type": "object",
                "properties": {
                    "publicCloudAPISpecUri": {
                        "$ref": "#/components/schemas/publicCloudAPISpecUri"
                    },
                    "publicCloudAPISpecName": {
                        "$ref": "#/components/schemas/publicCloudAPISpecName"
                    }
                }
            },
            "continuousAssuranceURI": {
                "title": "continuousAssuranceURI",
                "description": "This is the URI to the Continuous Assureance service for a Cloud Provider",
                "type": "string"
            },
            "continuousAssuranceVersion": {
                "title": "continuousAssuranceVersion",
                "description": "The Continuous Assureance service will constantly evolve and expand - end point versioning is required",
                "type": "string"
            },
            "continuousAssuranceObject": {
                "title": "continuousAssuranceObject",
                "description": "For a specific Group, there are a list of 1 to many discrete entitlements. This object is used to representat the state of entitlements for a specific group",
                "type": "object",
                "properties": {
                    "publicCloudAPISpecObject": {
                        "$ref": "#/components/schemas/publicCloudAPISpecObject"
                    },
                    "continuousAssuranceURI": {
                        "$ref": "#/components/schemas/continuousAssuranceURI"
                    },
                    "continuousAssuranceVersion": {
                        "$ref": "#/components/schemas/continuousAssuranceVersion"
                    }
                }
            },
            "continuousAssuranceObjectList": {
                "title": "continuousAssuranceObjectList",
                "description": "This represents a list of Continuous Assurance Objects that includes the ability to have multiple versions",
                "type": "array",
                "items": {
                    "type": "object",
                    "properties": {
                        "continuousAssuranceObject": {
                            "$ref": "#/components/schemas/continuousAssuranceObject"
                        }
                    }
                }
            }
        },
        "parameters": {
            "UniqueSpaceName": {
                "name": "UniqueSpaceName",
                "in": "path",
                "description": "This the Unique Name for the Space",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "UniqueStageName": {
                "name": "UniqueStageName",
                "in": "path",
                "description": "This the Unique Name for the Stage within the Space",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "StageChangeMode": {
                "name": "StageChangeMode",
                "in": "query",
                "description": "Changes MUST be calculated first via the default 'plan' change mode. This is so that segregation of duty and governance over state change can be applied. When the change mode 'apply' is specified, all desiredstate changes will be applied",
                "required": true,
                "schema": {
                    "type": "string",
                    "default": "plan",
                    "enum": [
                        "plan",
                        "apply"
                    ]
                }
            },
            "Tooling": {
                "name": "Tooling",
                "in": "query",
                "description": "This is the unique identifier for the Tooling that is being targeted such as ARM, CFT, Terraform etc",
                "required": false,
                "schema": {
                    "type": "string",
                    "enum": [
                        "terraform",
                        "cloudFormation",
                        "ARM"
                    ]
                }
            },
            "CloudProvider": {
                "name": "CloudProvider",
                "in": "query",
                "description": "This indicates which cloud provier tooling type is being requested",
                "required": false,
                "schema": {
                    "type": "string",
                    "enum": [
                        "aws",
                        "azr",
                        "gcp",
                        "vmware",
                        "kube"
                    ]
                }
            },
            "OperatorName": {
                "name": "OperatorName",
                "in": "query",
                "description": "An Operator Name distinctly identifies the 'Architecture Definition Type' that is being requested",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "OperatorKind": {
                "name": "OperatorKind",
                "in": "query",
                "description": "An Operator Name distinctly identifies the 'Architecture Definition Type' that is being requested",
                "required": true,
                "schema": {
                    "type": "string",
                    "enum": [
                        "architecture",
                        "control",
                        "entitlement"
                    ],
                    "default": "architecture"
                }
            },
            "OperatorRegistrationStatus": {
                "name": "OperatorRegistrationStatus",
                "in": "query",
                "description": "A flag indicating whether the operator has been registered for usage within the API Server",
                "required": true,
                "schema": {
                    "type": "string",
                    "enum": [
                        "yes",
                        "no"
                    ],
                    "default": "no"
                }
            },
            "OperatorVersion": {
                "name": "OperatorVersion",
                "in": "query",
                "description": "This is the specific version identifier for the specific Operator instance",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "OperatorRepoName": {
                "name": "OperatorRepoName",
                "in": "path",
                "description": "This the Unique Name for the Operator Repo",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "PublicCloudAPISpecName": {
                "name": "PublicCloudAPISpecName",
                "in": "path",
                "description": "This the Unique Name for the Public Cloud API Spec Provider",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "TeamName": {
                "name": "TeamName",
                "in": "path",
                "description": "This the Unique Name for the Team specific to a Space",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "GroupName": {
                "name": "GroupName",
                "in": "path",
                "description": "This the Unique Name for the Group within the Team specific to a Stage within a Space",
                "required": true,
                "schema": {
                    "type": "string"
                }
            }
        }
    }
}